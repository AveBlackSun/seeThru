/* jQuery seeThru 0.9.2 - transparent HTML5 video - written by Frederik Ring (frederik.ring@gmail.com) */
/* based on http://jakearchibald.com/scratch/alphavid/ by Jake Archibald (jaffathecake@gmail.com) */

/* Copyright (c) 2012 Frederik Ring */
/* Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: */
/* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */

/* see http://code.google.com/p/jquery-seethru for documentation */

(function($){var methods={};methods.init=function(options){if(!options){options={}}var settings=$.extend({fps:25,start:"autoplay",end:"loop",mask:"",alphaMask:false},options);this.each(function(){var staticMask=false;var alphaMask=Boolean(settings.alphaMask);var maskObj;if($(settings.mask).length){maskObj=$(settings.mask)[0];if(maskObj.tagName==="IMG"){$(maskObj).hide();staticMask=true}else{$.error("Mask element must be <img>")}}if(this.tagName==="VIDEO"){$(this).bind("loadedmetadata",function(){var video=$(this)[0];$(this).data({staticMask:staticMask,alphaMask:alphaMask});var divisor=staticMask?1:2;var dimensions={};if(!$(this).attr("width")&&!$(this).attr("height")){dimensions={width:video.videoWidth,height:Math.floor(video.videoHeight/divisor)}}else{if(!$(this).attr("height")){var ratio=video.videoWidth/Math.floor(video.videoHeight/divisor);dimensions={width:parseInt($(this).attr("width")),height:parseInt($(this).attr("width")/ratio)}}else{if(!$(this).attr("width")){var ratio=video.videoWidth/Math.floor(video.videoHeight/divisor);dimensions={width:parseInt($(this).attr("height"))*ratio,height:parseInt($(this).attr("height"))}}else{dimensions={width:parseInt($(this).attr("width")),height:parseInt($(this).attr("height"))}}}}if(staticMask){$(maskObj).attr({width:dimensions.width,height:dimensions.height})}var bufferCanvas=$("<canvas/>").hide().addClass("seeThru-buffer").attr({width:dimensions.width,height:dimensions.height*2});var displayCanvas=$("<canvas/>").addClass("seeThru-display").attr({width:dimensions.width,height:dimensions.height});var display=displayCanvas[0].getContext("2d");var buffer=bufferCanvas[0].getContext("2d");if(staticMask){if(alphaMask){var convertCanvas=$("<canvas/>").hide().attr({width:dimensions.width,height:dimensions.height});var convertCtx=convertCanvas[0].getContext("2d");convertCtx.drawImage(maskObj,0,0,dimensions.width,dimensions.height);var RGBA=convertCtx.getImageData(0,0,dimensions.width,dimensions.height);for(var i=3;i<RGBA.data.length;i=i+4){RGBA.data[i-1]=RGBA.data[i-2]=RGBA.data[i-3]=RGBA.data[i];RGBA.data[i]=255}buffer.putImageData(RGBA,0,dimensions.height)}else{buffer.drawImage(maskObj,0,dimensions.height,dimensions.width,dimensions.height)}}$(this).hide().data({seeThru:true,staticMask:staticMask,alphaMask:alphaMask}).after(bufferCanvas).after(displayCanvas);var interval;var refresh=1/settings.fps*1000;$(this).bind("play",function(){clearInterval(interval);interval=setInterval(drawFrame,refresh)});if(settings.start=="clicktoplay"){drawFrame();$(displayCanvas).one("click",function(){video.play()})}else{if(settings.start=="external"){drawFrame()}else{video.play()}}if(settings.end=="loop"){video.addEventListener("ended",function(){video.play()},false)}else{if(settings.end=="rewind"){video.addEventListener("ended",function(){video.pause();video.currentTime=0;if(settings.start=="clicktoplay"){$(displayCanvas).one("click",function(){video.play()})}},false)}else{video.addEventListener("ended",function(){video.pause();if(settings.start=="clicktoplay"){$(displayCanvas).one("click",function(){video.play()})}},false)}}function drawFrame(){buffer.clearRect(0,0,dimensions.width,dimensions.height*divisor);buffer.drawImage(video,0,0,dimensions.width,dimensions.height*divisor);var image=buffer.getImageData(0,0,dimensions.width,dimensions.height);var alphaData=buffer.getImageData(0,dimensions.height,dimensions.width,dimensions.height).data;for(var i=3;i<image.data.length;i=i+4){image.data[i]=Math.floor((alphaData[i-1]+alphaData[i-2]+alphaData[i-3])/3)}display.putImageData(image,0,0,0,0,dimensions.width,dimensions.height)}})}else{$.error("Selected element must be <video> element")}});return this};methods.updateMask=function(options){var settings=$.extend({mask:"",},options);if($(settings.mask).length){var staticMask=Boolean($(this).data("staticMask"));var alphaMask=Boolean($(this).data("alphaMask"));if(staticMask){if($(settings.mask)[0].tagName==="IMG"){var dimensions={width:$(this).width(),height:$(this).height()};var maskObj=$(settings.mask)[0];var buffer=$(this).nextAll(".seeThru-buffer")[0].getContext("2d");if(alphaMask){var convertCanvas=$("<canvas/>").hide().attr({width:dimensions.width,height:dimensions.height});var convertCtx=convertCanvas[0].getContext("2d");convertCtx.drawImage(maskObj,0,0,dimensions.width,dimensions.height);var RGBA=convertCtx.getImageData(0,0,dimensions.width,dimensions.height);for(var i=3;i<RGBA.data.length;i=i+4){RGBA.data[i-1]=RGBA.data[i-2]=RGBA.data[i-3]=RGBA.data[i];RGBA.data[i]=255}buffer.putImageData(RGBA,0,dimensions.height)}else{buffer.drawImage(maskObj,0,dimensions.height,dimensions.width,dimensions.height)}}else{$.error("Passed mask element must be <img>")}}else{$.error("Cannot apply method '.updateMask()' to element with moving alpha")}}else{$.error("Missing parameter 'mask'")}return this};$.fn.seeThru=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1))}else{if(typeof method==="object"||!method){return methods.init.apply(this,arguments)}else{$.error("Method "+method+" does not exist on jQuery.seeThru")}}}})(jQuery);